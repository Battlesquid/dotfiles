(defwidget media-menu-main[]
  (box :class "menu media-menu"
        :orientation "v"
    (now-playing)
    (sliders)))

(defwidget now-playing[]
  (box :class "now-playing"
       :orientation "v"
    (box :class "now-playing-controls"
         :orientation "h"
         :space-evenly false
      (box :class "now-playing-overview"
           :orientation "v"
           :hexpand true
        (label :class "now-playing-title" :halign "start" :limit-width 15 :text now-playing-title)
        (label :class "now-playing-artist" :halign "start" :text now-playing-artist)
        (label :class "now-playing-time" :halign "start" :valign "end" :text now-playing-time))
      (box :class "now-playing-playback"
           :orientation "v"
           :halign "end"
        (button :class "now-playing-prev" :onclick "scripts/media prev" "")
        (button :class "now-playing-toggle ${now-playing-toggle-class}" :onclick "scripts/media toggle" now-playing-toggle-icon)
        (button :class "now-playing-next" :onclick "scripts/media next" "")))))

(defpoll now-playing-title :interval "1s" "scripts/media title")
(defpoll now-playing-artist :interval "1s" "scripts/media artist")
(defpoll now-playing-time :interval "1s" "scripts/media time")
(deflisten now-playing-toggle-icon "scripts/media icon")
(deflisten now-playing-toggle-class "scripts/media class")

(defwidget sliders[]
  (box :class "sliders"
       :orientation "v"
       :space-evenly true
    (vol)
    (mic)))

(defwidget vol[]
  (box :class "vol"
       :orientation "h"
       :space-evenly false
    (button :class "vol-icon" :onclick "../common/scripts/vol toggle-mute" vol-icon) 
    (scale :class "vol-scale"
           :orientation "h"
           :min 0
           :max 101
           :value vol-value
           :timeout "3s"
           :onchange "echo {} && ../common/scripts/vol set {}")))

(deflisten vol-value :initial 0 "../common/scripts/vol follow")
(defpoll vol-icon  :initial "" :interval "1s" "../common/scripts/vol icon")

(defwidget mic[]
  (box :class "mic"
       :orientation "h"
       :space-evenly false
    (button :class "mic-icon" :onclick "../common/scripts/mic toggle-mute" mic-icon)
    (scale :class "mic-scale"
           :orientation "h"
           :min 0
           :max 101
           :value mic-val
           :onchange "../common/scripts/mic set {}")))

(deflisten mic-val :initial 0 "../common/scripts/mic follow")
(defpoll mic-icon :interval "1s" "../common/scripts/mic icon")

(defwindow media-menu 
  :monitor 0
  :geometry (geometry :x "-10px" :y "68px" :width "384px" :anchor "top right")
  :windowtype "dock"
  :wm-ignore false
  (media-menu-main))
