(defwidget time-menu-main[]
  (box :class "menu time-menu"
       :orientation "v"
       :space-evenly false
        :spacing 15
    (time)
    (cal)
    (weather)
    (notif-menu-main)))

(defwidget time[]
  (box :class "time-box"
       :orientation "v"
       :space-evenly false  
    (label :class "time" :text time)
    (label :class "date" :text "${date}")))

(defpoll time :interval "1s" "date +'%I:%M' ")
(defpoll date :interval "5s" "date +'%A, %B %d' | tr '[:upper:]' '[:lower:]'")

(defwidget cal[]
  (box :class "cal-box"
       :orientation "v"
       :space-evenly false
    (box :class "cal-header" "sun" "mon" "tue" "wed" "thu" "fri" "sat")
    (calendar :class "cal"
              :valign "center"
              :active false
              :show-heading false
              :show-day-names false)))

(defwidget weather[]
  (box :class "weather"
       :orientation "h"
       :hexpand true
       :space-evenly false
    (label :class "weather-icon" :text weather-icon)
    (box :class "weather-details"
         :orientation "v"
         :space-evenly false
         :hexpand true
         :valign "center"
      (label :class "weather-name" :halign "start" :text weather-name)
      (label :class "weather-temp" :halign "start" :text "${weather-temp}° F"))))

(defpoll weather-icon :interval "30m" :timeout "1s" "scripts/weather icon") 
(defpoll weather-name :interval "30m" :timeout "1s" "scripts/weather name")
(defpoll weather-temp :interval "30m" :timeout "1s" "scripts/weather temp")

(defwidget notif-menu-main[]
  (box :class "menu notif-menu"
       :orientation "v"
       :vexpand true
    (notifs-box)))

(defwidget notification-card [summary body image application ?class ?urgency ?SL ?M ?L ?R]
  (eventbox :class "notification-card-eventbox ${class}" :onclick L :onmiddleclick M :onrightclick R 
    (box :class "notification-card" :orientation "h" :space-evenly false 
      (box :class "notifification-left"
        (box :class "notification-image" :style "background-image: url(\"${image}\")"))
      (box :class "notification-middle" :orientation "v"
           :space-evenly false
           :hexpand true
        (label :class "notification-summary" :halign "start" :limit-width 25 :tooltip summary :text summary) 
        (label :class "notification-body" :halign "start"  :limit-width 30 :wrap true :tooltip body :text body))
      (box :class "notification-end"
        (button :class "notification-card-notify-close" :halign "end" :onclick "~/.scripts/notifs rm_id ${SL}" 
          (label :text "" :tooltip "Dismiss"))))))

(defwidget notifs-box[]
  (box :class "notifications-box" :orientation "v" :hexpand true :vexpand true :space-evenly false
    (label :class "notification-headers-label" :hexpand true :text "notifications")
    (box :class "notification-headers"
         :orientation "v"
         :space-evenly false
         :vexpand true
      (literal :content notifications-cards :class "notification-literal" :vexpand true)) 
    (button :onclick "~/.scripts/notifs clear" :hexpand true :valign "end" :tooltip "Clear Notifications" :class "notification-headers-clear" "")))

(deflisten notifications-cards "~/.scripts/notifs subscribe")

(defwindow time-menu 
  :monitor 0
  :geometry (geometry :x "-10px" :y "60px" :width "384px" :height "94%" :anchor "top right")
  :windowtype "dock"
  :wm-ignore false
  (time-menu-main))
