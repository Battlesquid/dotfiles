#!/bin/bash

function ram() {
    printf "%.0f\n" "$(free -m | grep Mem | awk '{print ($3/$2)*100}')"
}

function cpu() {
    # credits to adi1090x
    local PREV_TOTAL=0
    local PREV_IDLE=0
    local cpuFile="/tmp/.cpu_usage"

    if [[ -f "${cpuFile}" ]]; then
        fileCont=$(cat "${cpuFile}")
        PREV_TOTAL=$(echo "${fileCont}" | head -n 1)
        PREV_IDLE=$(echo "${fileCont}" | tail -n 1)
    fi

    CPU=($(cat /proc/stat | grep '^cpu ')) # Get the total CPU statistics.
    unset CPU[0]                           # Discard the "cpu" prefix.
    IDLE=${CPU[4]}                         # Get the idle CPU time.

    # Calculate the total CPU time.
    TOTAL=0

    for VALUE in "${CPU[@]:0:4}"; do
        let "TOTAL=$TOTAL+$VALUE"
    done

    if [[ "${PREV_TOTAL}" != "" ]] && [[ "${PREV_IDLE}" != "" ]]; then
        # Calculate the CPU usage since we last checked.
        let "DIFF_IDLE=$IDLE-$PREV_IDLE"
        let "DIFF_TOTAL=$TOTAL-$PREV_TOTAL"
        let "DIFF_USAGE=(1000*($DIFF_TOTAL-$DIFF_IDLE)/$DIFF_TOTAL+5)/10"
        echo "${DIFF_USAGE}"
    else
        echo "?"
    fi

    # Remember the total and idle CPU times for the next check.
    echo "${TOTAL}" >"${cpuFile}"
    echo "${IDLE}" >>"${cpuFile}"
}

function dsk() {
    df -h / | awk '{ print $5 }' | tail -1 | sed 's/%//'
}

function dsk_total() {
    df -h / | awk '{ print $2 }' | tail -1 | sed 's/G//'
}

function follow() {
    echo "{\"ram\":$(ram),\"cpu\":$(cpu),\"dsk\":$(dsk)}"
    local new_ram
    local new_cpu
    local new_dsk
    while sleep 5; do
        new_ram=$(ram)
        new_cpu=$(cpu)
        new_dsk=$(dsk)
        echo "{\"ram\":$new_ram,\"cpu\":$new_cpu,\"dsk\":$new_dsk}"
    done
}

function _uptime() {
    uptime -p | sed 's/ minutes\?/m/g;s/ hours\?/h/g'
}

case "$1" in
"ram") ram ;;
"cpu") cpu ;;
"dsk") dsk ;;
"dsk_total") dsk_total ;;
"follow") follow ;;
"uptime") _uptime ;;
*) echo "Unrecognized command" && exit 1 ;;
esac
